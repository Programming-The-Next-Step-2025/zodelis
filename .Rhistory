install.packages("roxygen2")
library(roxygen2)
roxygen2::roxygenize
roxygen2::roxygenize
roxygen2::roxygenize
#' Print "Hello, beautiful world!"
#' @param a Is empty
#' @details Prints "Hello, beautiful world!"
hello <- function() {
print("Hello, beautiful world!")
}
roxygen2::roxygenise()
roxygen2::roxygenise()
?create_feedback_tiles
source("~/GitHub/zodelis/R/launch_zodelis.R")
?create_feedback_tiles
roxygen2::roxygenise()
?create_feedback_tiles
?create_feedback_tile
?create_feedback_tiles
shiny::runApp('R')
?zodelis
roxygen2::roxygenise
roxygen2::roxygenise()
?server
roxygen2::roxygenise()
?server
?create_feedback_tiles
runApp('R')
roxygen2::roxygenise()
?create_feedback_tiles
launch_zodelis()
launch_zodelis()
launch_zodelis()
launch_zodelis()
words_lt <- readRDS("data/words_lt.rds")
usethis::use_data(words_lt, name = "words_lt", overwrite = TRUE)
rlang::last_trace()
list.files()
words_lt
export(words_lt, "words_lt.rda")
export(words_lt, "words_lt.rda")library("rio")
library("rio")
save(words_lt, file = "data/words_lt.rda", compress = "xz")
?words_lt
roxygen2::roxygenise(
)
?words-lt
?words_lt
shiny::runApp('R')
runApp('R')
load("data/words_lt.rda")
runApp('R')
load("data/words_lt.rda")s
save(words_lt, file="words_lt.rda")
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
save(c("test"), file="test.rda")
save(c("test"), file="test.rda")
p <- "test"
save(p, file="test.rda")
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
